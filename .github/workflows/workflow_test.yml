name: Galaxy Workflow Tests for push and PR
on: [push, pull_request]
env:
  GALAXY_REPO: https://github.com/galaxyproject/galaxy
  GALAXY_RELEASE: release_20.09
jobs:
  setup:
    # Shared 100% with tool testing setup
    name: Setup cache and determine changed repositories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    outputs:
      galaxy-commit: ${{ steps.galaxy-commit.outputs.galaxy-commit }}
      changed-repositories: ${{ steps.discover-repositories.outputs.changed-repositories }}
    steps:
    - name: Print github context properties
      run: |
        echo 'event: ${{ github.event_name }}'
        echo 'sha: ${{ github.sha }}'
        echo 'ref: ${{ github.ref }}'
        echo 'head_ref: ${{ github.head_ref }}'
        echo 'base_ref: ${{ github.base_ref }}'
        echo 'event.before: ${{ github.event.before }}'
        echo 'event.after: ${{ github.event.after }}'
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Determine latest galaxy commit
      run: echo "GALAXY_HEAD_SHA=$(git ls-remote ${{ env.GALAXY_REPO }} refs/heads/${{ env.GALAXY_RELEASE }} | cut -f1)" >> $GITHUB_ENV
    - name: Set galaxy head commit
      id: galaxy-commit
      run: echo "::set-output name=galaxy-commit::$GALAXY_HEAD_SHA"
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_$GALAXY_HEAD_SHA
    - name: Cache .planemo
      uses: actions/cache@v2
      id: cache-planemo
      with:
        path: ~/.planemo
        key: planemo_cache_py_${{ matrix.python-version }}_gxy_$GALAXY_HEAD_SHA
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: mvdbeek/planemo-discover-action@workflow_enhancements
      id: discover-repositories
      with:
        planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
        create-cache: ${{ steps.cache-pip.outputs.cache-hit != 'true' || steps.cache-planemo.outputs.cache-hit != 'true' }}
        galaxy-branch: ${{ env.GALAXY_RELEASE }}
        galaxy-source: ${{ env.GALAXY_REPO }}

  # Planemo lint the changed repositories
  lint:
    # Only difference with tool linting step is `lint-workflow`
    name: Lint workflows
    needs: setup
    if: needs.setup.outputs.changed-repositories != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
    steps:
    # checkout the repository
    # and use it as the current working directory
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-commit }}
    - uses: mvdbeek/planemo-discover-action@workflow_enhancements
      id: discover-repositories
      with:
         planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
         changed-repositories: ${{ needs.setup.outputs.changed-repositories }}
         lint-workflows: true

  test:
    name: Test workflows
    # This job runs on Linux
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.changed-repositories != ''
    strategy:
      fail-fast: false
      matrix:
        chunk: [0, 1, 2, 3]
        python-version: [3.7]
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
    # checkout the repository
    # and use it as the current working directory
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-commit }}
    - name: Cache .planemo
      uses: actions/cache@v2
      id: cache-planemo
      with:
        path: ~/.planemo
        key: planemo_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-commit }}
    - run: ./.scripts/setup_cvmfs.sh
    - uses: mvdbeek/planemo-discover-action@workflow_enhancements
      with:
         planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
         changed-repositories: ${{ needs.setup.outputs.changed-repositories }}
         test-workflows: true
         combine-outputs: true
         chunk-count: 4
         chunk: ${{ matrix.chunk}}
    - uses: actions/upload-artifact@v2.0.1
      with:
        name: 'Workflow test output ${{ matrix.chunk }}'
        path: upload

  # - combine the results of the test chunks (which will never fail due
  #   to `|| true`) and create a global test report as json and html which
  #   is provided as artifact
  # - check if any tool test actually failed (by lookup in the combined json)
  #   and fail this step if this is the case
  combine_outputs:
    # same as tool step
    name: Combine chunked test results
    needs: [setup, test]
    strategy:
      matrix:
        python-version: [3.7]
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_{{ needs.setup.outputs.galaxy-commit }}
    - name: Install jq
      run: sudo apt-get install jq
    - uses: mvdbeek/planemo-discover-action@workflow_enhancements
      with:
         planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
         changed-repositories: ${{ needs.setup.outputs.changed-repositories }}
         combine-outputs: true
         html-report: true
    - uses: actions/upload-artifact@v2.0.1
      with:
        name: 'All tool test results'
        path: upload
    - name: Check status of combined status
      run: |
        if jq '.["tests"][]["data"]["status"]' upload/test_output.json | grep -v "success"; then
            echo "Unsuccessful tests found, inspect the 'All workflow test results' artifact for details."
            exit 1
        fi

  # deploy workflows to organization
  deploy:
    name: Deploy
    needs: [setup,test,combine_outputs]
    strategy:
      matrix:
        python-version: [3.7]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'mvdbeek'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_{{ needs.setup.outputs.galaxy-commit }}
    - name: Update or create repositories in github namespace
      uses: mvdbeek/planemo-discover-action@workflow_enhancements
      with:
         planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
         changed-repositories: ${{ needs.setup.outputs.changed-repositories }}
         workflow-upload: true
         workflow-namespace: iwc-workflows
         github-token: ${{ secrets.IWC_WORKFLOWS_BOT_TOKEN }}
